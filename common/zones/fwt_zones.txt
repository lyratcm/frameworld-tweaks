@city_time = 480
@city_cost = 500
@city_upkeep = 2
@advanced_cost = 600
@advanced_rural_cost = 600
@advanced_rare_cost = 30
@advanced_upkeep = 3
@advanced_rare_upkeep = 1
@advanced_time = 720

district_giga_frameworld_city = {
    base_buildtime = @city_time
    icon = GFX_colony_type_urban

    unlock = {
		uses_district_set = giga_frameworld
    }

    potential = {
        uses_district_set = giga_frameworld
    }

    resources = {
        category = planet_districts_cities
        cost = {
            minerals = @city_cost
			mult = fwt_city_completion
        }
        upkeep = {
            energy = @city_upkeep
			mult = fwt_city_completion
        }
    }
    include = {
        all
    }
    excluded_building_sets = {
        generator
        mining
        farming
        knights
        betharian
    }

    max_buildings = 3

    triggered_district_planet_modifier = {
		potential = { always = yes }
        planet_housing_add = 600
		mult = fwt_city_completion
    }

    triggered_planet_modifier = {
		potential = { always = yes }
        zone_building_slots_add = 3
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_valid_civic = civic_agrarian_idyll
            }
        }
        modifier = {
            planet_housing_add = -50
        }
		mult = fwt_city_completion
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_active_tradition = tr_prosperity_public_works }
        }
        modifier = {
            planet_housing_add = 50
        }
		mult = fwt_city_completion
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_1
            }
        }
        modifier = {
            planet_housing_add = 50
        }
		mult = fwt_city_completion
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_2
                NOT = { has_valid_civic = civic_agrarian_idyll }
            }
        }
        modifier = {
            planet_housing_add = 50
        }
		mult = fwt_city_completion
    }
}

district_giga_frameworld_foundry = {
    icon = GFX_colony_type_habitat_foundry
    potential = {
        uses_district_set = giga_frameworld
    }

    unlock = { # planet scope
        uses_district_set = giga_frameworld
    }

    included_building_sets = {
        foundry
        automation
        origin
    }

    inline_script = {
        script = districts/params/fwt_district_inline_alloy_params
    }
}

district_giga_frameworld_factory = {
	icon = GFX_colony_type_habitat_factory
    unlock = {
		exists = owner
		uses_district_set = giga_frameworld
		owner = {
			or = {
				is_gestalt = no
				has_valid_civic = civic_machine_servitor
				country_uses_consumer_goods = yes
			}
		}
	}

	potential = {
		exists = owner
		uses_district_set = giga_frameworld
		owner = {
			or = {
				is_gestalt = no
				has_valid_civic = civic_machine_servitor
				country_uses_consumer_goods = yes
			}
		}
	}

    included_building_sets = {
        factory
        automation
        origin
    }

    show_in_tech = tech_basic_industry

	inline_script = {
		script = districts/params/fwt_district_inline_factory_params
	}
}

district_giga_frameworld_generator = {
	icon = GFX_colony_type_habitat_energy

    unlock = {
		uses_district_set = giga_frameworld
	}

	potential = {
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_power_plant_1

    included_building_sets = {
        generator
        fallen_empire_generator
        automation
    }

	inline_script = {
		script = districts/params/fwt_district_inline_energy_params
	}
}

district_giga_frameworld_mining = {
	icon = GFX_colony_type_habitat_mining

    unlock = {
		uses_district_set = giga_frameworld
	}

	potential = {
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_mechanized_mining

    included_building_sets = {
        mining
        fallen_empire_mining
        automation
    }

	inline_script = {
		script = districts/params/fwt_district_inline_minerals_params
	}
}

district_giga_frameworld_farming = {
	icon = GFX_colony_type_habitat_farming

    unlock = {
		uses_district_set = giga_frameworld
	}

	potential = {
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_industrial_farming

    included_building_sets = {
        farming
        hydroponics
        automation
        fallen_empire_farming
    }

	inline_script = {
		script = districts/params/fwt_district_inline_food_params
	}
}

district_giga_frameworld_trade = {
	icon = GFX_colony_type_habitat_trade

    unlock = {
		exists = owner
		owner = {
			is_gestalt = no
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
		}
		uses_district_set = giga_frameworld
	}

    included_building_sets = {
        urban
        trade
        automation
        origin
    }


	convert_to = {
		district_giga_frameworld_generator
	}

	inline_script = {
		script =  districts/params/fwt_district_inline_trade_params
	}
}

district_giga_frameworld_administrative = {
	icon = GFX_colony_type_bureaucratic

    unlock = {
		exists = owner
		owner = {
			is_gestalt = no
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_planetary_government


	inline_script = {
		script = districts/params/fwt_district_inline_unity_params
		JOB = "planet/unity/fwt_bureaucrat_swap"
	}

    included_building_sets = {
        unity
        automation
        origin
    }

	convert_to = {
		district_giga_frameworld_sanctuary
		district_giga_frameworld_synapse
		district_giga_frameworld_simulation
	}
}

# hive unity
district_giga_frameworld_synapse = {
	icon = GFX_colony_type_bureaucratic

    unlock = {
		exists = owner
		owner = {
			is_hive_empire = yes
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_hive_node

	convert_to = {
		district_giga_frameworld_sanctuary
		district_giga_frameworld_administrative
		district_giga_frameworld_simulation
	}

	included_building_sets = {
		unity
		automation
		origin
	}

	inline_script = {
		script = districts/params/fwt_district_inline_unity_params
		JOB = "planet/unity/fwt_gestalt_unity_job_swap"
	}

	triggered_district_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_domination_synaptic_extensions
			}
		}
		modifier = {
			planet_housing_add = 200
		}
	}

	triggered_district_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_edict = synaptic_reinforcement
			}
		}
		job_maintenance_drone_add = @[ 100 * 1.25 ]
	}

	triggered_desc = {
		text = job_synapse_drone_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_edict = synaptic_reinforcement
			}
		}
		text = job_maintenance_drone_effect_desc
	}
}

district_giga_frameworld_simulation = {
	icon = GFX_colony_type_bureaucratic

	unlock = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOT = { has_valid_civic = civic_machine_servitor }
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOT = { has_valid_civic = civic_machine_servitor }
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_planetary_government

	convert_to = {
		district_giga_frameworld_administrative
		district_giga_frameworld_sanctuary
		district_giga_frameworld_synapse
	}

	included_building_sets = {
		unity
		automation
		origin
	}

	inline_script = {
		script = districts/params/fwt_district_inline_unity_params
		JOB = "planet/unity/fwt_gestalt_unity_job_swap"
	}
}

district_giga_frameworld_sanctuary = {
	icon = GFX_colony_type_bureaucratic

	unlock = {
		exists = owner
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_servitor
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_servitor
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_planetary_government

	inline_script = {
		script = districts/params/fwt_district_inline_unity_params
		#lyra added to fit script
		JOB = "districts/fwt_bio_trophy_job_swap"
	}

	convert_to = {
		district_giga_frameworld_simulation
		district_giga_frameworld_synapse
		district_giga_frameworld_administrative
	}

	included_building_sets = {
		unity
		automation
		origin
	}

	triggered_desc = {
		text = job_bio_trophy_effect_desc
	}
}

district_giga_frameworld_science = {
	icon = GFX_colony_type_habitat_research

	unlock = {
		uses_district_set = giga_frameworld
	}

	potential = {
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_basic_science_lab_1

    included_building_sets = {
        research
        automation
        origin
    }

	inline_script = {
		script = districts/params/fwt_district_inline_science_params
	}
}

# amenities
district_giga_frameworld_amenities = {
	base_buildtime = @advanced_time
	icon = GFX_colony_type_habitat_leisure

	unlock = {
		exists = owner
		owner = {
			is_gestalt = no
			NOT = { has_valid_civic = civic_dystopian_society }
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			NOT = { has_valid_civic = civic_dystopian_society }
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_holo_entertainment

	convert_to = {
		district_giga_frameworld_amenities_dystopian
		district_giga_frameworld_amenities_gestalt
	}

	included_building_sets = {
		amenity
		automation
		origin
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = @advanced_cost
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			energy = @advanced_upkeep
			mult = fwt_unity_trade_completion
		}
		cost = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			exotic_gases = @advanced_rare_cost
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			exotic_gases = @advanced_rare_upkeep
			mult = fwt_unity_trade_completion
		}
	}

    planet_modifier = {
        zone_building_slots_add = 3
    }

    inline_script = {
        script = zones/shared_frameworld_non_urban_zone_modifiers
    }

    triggered_district_planet_modifier = {
		potential = {
			exists = owner
			owner = { NOT = { has_valid_civic = civic_warrior_culture } }
		}
		modifier = {
			job_entertainer_add = @frameworld_jobs_base
		}
		mult = fwt_unity_trade_completion
	}

    triggered_district_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_warrior_culture }
		}
		modifier = {
			job_duelist_add = @frameworld_jobs_base
		}
		mult = fwt_unity_trade_completion
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { NOT = { has_valid_civic = civic_warrior_culture } }
		}
		text = job_entertainer_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_valid_civic = civic_warrior_culture }
		}
		text = job_duelist_effect_desc
	}
}

###############################################################################################################
# dystopian amenities

district_giga_frameworld_amenities_dystopian = {
	base_buildtime = @advanced_time
	icon = GFX_colony_type_habitat_leisure

	unlock = {
		exists = owner
		owner = {
			is_gestalt = no
			has_valid_civic = civic_dystopian_society
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			has_valid_civic = civic_dystopian_society
		}
		uses_district_set = giga_frameworld
	}

    show_in_tech = tech_planetary_government

	convert_to = {
		district_giga_frameworld_amenities
		district_giga_frameworld_amenities_gestalt
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = @[ advanced_cost * 2 ]
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			energy = @[ advanced_upkeep * 2 ]
			mult = fwt_unity_trade_completion
		}
		cost = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			exotic_gases = @advanced_rare_cost
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			exotic_gases = @advanced_rare_upkeep
			mult = fwt_unity_trade_completion
		}
	}

	included_building_sets = {
		amenity
		automation
		origin
	}

	triggered_desc = {
		trigger = { always = yes }
		text = district_giga_frameworld_amenities_dystopian_limit
	}

	inline_script = {
		script = zones/shared_frameworld_non_urban_zone_modifiers
	}

	triggered_district_planet_modifier = {
		potential = { always = yes }
		planet_amenities_add = 200
	}

	inline_script = {
		script = "planet/rulers/fwt_ruler_part_job_swap"
		jobs = @frameworld_jobs_base
		district = @yes
		condition = "owner = { is_gestalt = no }"
		multiplier_string = "mult = fwt_consumer_unity_trade_completion"
	}
}

###############################################################################################################
# gestalt amenities
district_giga_frameworld_amenities_gestalt = {
	base_buildtime = @advanced_time
	icon = GFX_colony_type_habitat_leisure

	unlock = {
		exists = owner
		owner = {
			is_gestalt = yes
		}
		uses_district_set = giga_frameworld
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = yes
		}
		uses_district_set = giga_frameworld
	}
	#change to a gestal starting tech
    # show_in_tech = tech_unity_of_purpose

	convert_to = {
		district_giga_frameworld_amenities_dystopian
		district_giga_frameworld_amenities
	}

	resources = {
		category = planet_districts
		cost = {
			rare_crystals = @advanced_rare_cost
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			rare_crystals = @advanced_rare_upkeep
			mult = fwt_unity_trade_completion
		}
		cost = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			rare_crystals = @advanced_rare_cost
			mult = fwt_unity_trade_completion
		}
		upkeep = {
			trigger = {
				check_variable = { which = fwt_unity_trade_completion value > 1 }
			}
			rare_crystals = @advanced_rare_upkeep
			mult = fwt_unity_trade_completion
		}
	}
    planet_modifier = {
        zone_building_slots_add = 3
    }

    inline_script = {
        script = zones/shared_city_non_urban_zone_modifiers
    }
	
	included_building_sets = {
		amenity
		automation
		origin
	}

    triggered_district_planet_modifier = {
		job_logistics_drone_add = @frameworld_jobs_base
		mult = fwt_unity_trade_completion
	}

    # triggered_district_planet_modifier = {
	# 	potential = {
	# 		always = yes
	# 	}
	# 	modifier = {
	# 		job_logistics_drone_add = @[ 100 * 1.25 ]
	# 	}
	# 	mult = fwt_consumer_unity_trade_completion
	# }

    # triggered_district_planet_modifier = {
	# 	potential = {
	# 		has_planet_flag = frameworld_advanced_city
	# 	}
	# 	modifier = {
	# 		job_frame_maintenance_overseer_add = @[ 100 * 1.25 ]
	# 		job_maintenance_drone_add = @[ -100 * 1.25 ]
	# 	}
	# }

	triggered_desc = {
		text = job_maintenance_drone_effect_desc
	}

	triggered_desc = {
		trigger = {
			has_deposit = d_frameworld_advanced_nexus
		}
		text = job_frame_maintenance_overseer_effect_desc
	}
}

# district_giga_frameworld_supertensiles = {
# 	base_buildtime = @b2_time
# 	icon = district_giga_supertensiles
#
#     show_in_tech = giga_tech_amb_supertensiles
#
# 	unlock = {
# 		has_global_flag = @giga_amb_flag
# 		exists = owner
# 		owner = {
# 			has_technology = giga_tech_amb_supertensiles
# 		}
# 		uses_district_set = giga_frameworld
# 	}
#
# 	potential = {
# 		has_global_flag = @giga_amb_flag
# 		exists = owner
# 		owner = {
# 			has_technology = giga_tech_amb_supertensiles
# 		}
# 		uses_district_set = giga_frameworld
# 	}
#
# 	resources = {
# 		category = planet_districts_industrial
# 		cost = {
# 			minerals = @b2_minerals
# 		}
# 		upkeep = {
# 			energy = @b2_upkeep
# 		}
# 	}
#
# 	included_building_sets = {
# 		foundry
# 		automation
# 		origin
# 	}
#
# 	triggered_district_planet_modifier = {
# 		planet_housing_add = 150
# 		mult = fwt_alloy_completion
# 	}
#
# 	triggered_district_planet_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = {
# 				is_gestalt = no
# 				is_fallen_empire_spiritualist = no
# 			}
# 		}
# 		modifier = {
# 			job_giga_megaengineer_add = @frameworld_jobs_base
# 		}
# 		mult = fwt_alloy_completion
# 	}
#
# 	triggered_district_planet_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = {
# 				is_gestalt = yes
# 			}
# 		}
# 		modifier = {
# 			job_giga_megaengineer_drone_add = @frameworld_jobs_base
# 		}
# 		mult = fwt_alloy_completion
# 	}
#
# 	triggered_district_planet_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = {
# 				is_fallen_empire_spiritualist = yes
# 			}
# 		}
# 		modifier = {
# 			job_giga_amb_fe_acolyte_foundry_add = @frameworld_jobs_base
# 		}
# 		mult = fwt_alloy_completion
# 	}
#
# 	triggered_desc = {
# 		trigger = {
# 			exists = owner
# 			owner = {
# 				is_gestalt = no
# 				is_fallen_empire_spiritualist = no
# 			}
# 		}
# 		text = job_giga_megaengineer_effect_desc
# 	}
# 	triggered_desc = {
# 		trigger = {
# 			exists = owner
# 			owner = {
# 				is_gestalt = yes
# 			}
# 		}
# 		text = job_giga_megaengineer_drone_effect_desc
# 	}
# 	triggered_desc = {
# 		trigger = {
# 			exists = owner
# 			owner = {
# 				is_fallen_empire_spiritualist = yes
# 			}
# 		}
# 		text = job_giga_amb_fe_acolyte_foundry_effect_desc
# 	}
# }

# district_giga_frameworld_anticrime = {
# 	base_buildtime = @advanced_time
# 	icon = district_penrose_generator
#
# 	unlock = {
# 		exists = owner
# 		owner = {
# 			has_technology = "tech_colonial_centralization"
# 		}
# 		uses_district_set = giga_frameworld
# 	}
#
# 	potential = {
# 		exists = owner
# 		owner = {
# 			has_technology = "tech_colonial_centralization"
# 		}
# 		uses_district_set = giga_frameworld
# 	}
#
#     show_in_tech = tech_colonial_centralization
#
# 	resources = {
# 		category = planet_districts
# 		cost = {
# 			minerals = @advanced_cost
# 			volatile_motes = @advanced_rare_cost
# 		}
# 		upkeep = {
# 			energy = @advanced_upkeep
# 			volatile_motes = @advanced_rare_upkeep
# 		}
# 	}
#
# 	included_building_sets = {
# 		government
# 		automation
# 		origin
# 	}
#
# 	inline_script = {
# 		script = zones/shared_frameworld_non_urban_zone_modifiers
# 	}
#
# 	triggered_district_planet_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { is_gestalt = no }
# 		}
# 		modifier = {
# 			job_enforcer_add = @frameworld_jobs_base
# 		}
# 	}
#
# 	triggered_district_planet_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { is_gestalt = yes }
# 		}
# 		modifier = {
# 			job_patrol_drone_add = @frameworld_jobs_base
# 		}
# 	}
#
# 	triggered_desc = {
# 		trigger = {
# 			exists = owner
# 			owner = { is_gestalt = no }
# 		}
# 		text = job_enforcer_effect_desc
# 	}
#
# 	triggered_desc = {
# 		trigger = {
# 			exists = owner
# 			owner = { is_gestalt = yes }
# 		}
# 		text = job_patrol_drone_effect_desc
# 	}
# }