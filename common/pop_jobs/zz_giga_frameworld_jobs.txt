@maintenance_scale = 0.5
@catalytic_upkeep = 1.5
@catalytic_output = 0.25
# unemployment filler for regular frameworld
frame_maintenance_worker = {
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_maintenance_depot
	clothes_texture_index = 2
	icon = giga_birch_ktisma_worker

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_jobs
		#half the normal jobs - bonuses to make it more compelling
		# main upkeep resource
		produces = {
			trigger = { is_robot_pop = no is_lithoid = no }
			food = 2

			multiplier = planet.value:giga_job_scaling_plus_base
		}
		produces = {
			trigger = { is_lithoid = yes }
			minerals = 2

			multiplier = planet.value:giga_job_scaling_plus_base
		}
		produces = {
			trigger = { is_robot_pop = yes }
			energy = 3

			multiplier = planet.value:giga_job_scaling_plus_base
		}
	}

	triggered_pop_modifier = {
		pop_housing_usage_add = -1
	}
	

	planet_modifier = {
		planet_jobs_productive_produces_mult = 0.0025
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = -10000

			planet = {
				giga_frameworld_has_expanded_maintenance_modifier = no
			}
		}
	}
}



# unemployment filler job for gestalt frameworld
frame_maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot
	icon = maintenance_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_machine_maintenance_protocols
				}
			}
			unity = 0.5

			multiplier = planet.value:giga_job_scaling_plus_base
		}

		# main upkeep resource
		produces = {
			trigger = { is_robot_pop = no is_lithoid = no }
			food = 2

			multiplier = planet.value:giga_job_scaling_plus_base
		}
		produces = {
			trigger = { is_lithoid = yes }
			minerals = 2

			multiplier = planet.value:giga_job_scaling_plus_base
		}
		produces = {
			trigger = { is_robot_pop = yes }
			energy = 3

			multiplier = planet.value:giga_job_scaling_plus_base
		}
	}

	triggered_pop_modifier = {
		pop_housing_usage_add = -1
	}
	
	planet_modifier = {
		planet_jobs_productive_produces_mult = 0.0025
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = -10000

			planet = {
				giga_frameworld_has_expanded_maintenance_modifier = no
			}
		}
	}
}

frame_maintenance_worker_alloy = {
	condition_string = WORKER_JOB_TRIGGER
	icon = giga_birch_ktisma_worker
	category = worker
	possible_precalc = can_fill_worker_job
	inline_script = {
		script = jobs/frame_maintenance_jobs
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}

	resources = {
		category = planet_metallurgists
		inline_script = {
			script = jobs/frame_maintenance_jobs_base_bonuses_alloy
			SCALE = 0.5
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_bugged_ornamentarian }
			}
			unity = @[ 0.5 * maintenance_scale ]
			mult = value:scripted_ethics_weight_mult|ETHIC|pacifist|
		}
		upkeep = {
			trigger = {
				owner = {
					is_ecocentric = yes
					is_catalytic_empire = no
				}
			}
			minerals = @[ -1 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				owner = {
					is_ecocentric = yes
					is_catalytic_empire = yes
				}
			}
			#bb set this to 2 for some reason
			food = @[ -2 * maintenance_scale ]
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_ornamentarian
					is_crafter_empire = yes
				}
			}
			alloys = @[ 0.5 * maintenance_scale ]
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_ornamentarian
					is_crafter_empire = yes
					is_catalytic_empire = yes
				}
			}
			alloys = @[ 0.5 * maintenance_scale ]
			multiplier = @catalytic_output
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_ornamentarian
					is_crafter_empire = yes
					is_catalytic_empire = no
				}
			}
			minerals = @[ 1 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_ornamentarian
					is_crafter_empire = yes
					is_catalytic_empire = no
				}
			}
			food = @[ 1 * maintenance_scale ]
			multiplier = @catalytic_upkeep
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_bugged_ornamentarian }
		}
		planet_amenities_add = @[ 1 * maintenance_scale ]
		mult = value:scripted_modifier_ethics_weight_mult|MODIFIER|pop_job_amenities_mult|ETHIC|pacifist|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_bugged_ornamentarian" }
		}
		planet_stability_add = @[ 0.05 * maintenance_scale ]
		mult = value:councilor_level|TYPE|councilor_bugged_ornamentarian|
	}

}

frame_maintenance_worker_research = {
	condition_string = WORKER_JOB_TRIGGER
	icon = giga_birch_ktisma_worker
	category = worker
	possible_precalc = can_fill_worker_job
	inline_script = {
		script = jobs/frame_maintenance_jobs
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}
	resources = {
		category = planet_researchers
		produces = {
			physics_research = 1.5
			engineering_research = 1.5
			society_research = 1.5
		}
		upkeep = {
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			consumer_goods = @[1 * maintenance_scale ]
		}
		#half the effect of bonuses/reducitons
		produces = {
			physics_research = -0.5
			multiplier = modifier:planet_researchers_physics_research_produces_add
		}
		produces = {
			engineering_research = -0.5
			multiplier = modifier:planet_researchers_engineering_research_produces_add
		}
		produces = {
			society_research = -0.5
			multiplier = modifier:planet_researchers_society_research_produces_add
		}
		upkeep = {
			consumer_goods = -0.5
			multiplier = modifier:planet_researchers_consumer_goods_upkeep_add
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_bugged_research_consultants
			}
		}
		trade_value_add = @[ 2 * maintenance_scale ]
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = branch_office_owner
				branch_office_owner = {
					is_criminal_syndicate = no
				}
				has_holding = {
					holding = building_bugged_consultants_office
					owner = branch_office_owner
				}
			}
		}
		trade_value_add = @[ 1 * maintenance_scale ]
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = branch_office_owner
				branch_office_owner = {
					is_criminal_syndicate = yes
				}
				has_holding = {
					holding = building_bugged_consultants_office
					owner = branch_office_owner
				}
			}
		}
		branch_office_criminal_syndicate_value_add = @[ 1 * maintenance_scale ]
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			OR = {
				owner = {
					has_valid_civic = civic_bugged_research_consultants
				}
				planet = {
					has_holding = {
						holding = building_bugged_consultants_office
						owner = branch_office_owner
					}
				}
			}
		}
		trade_value_add = @[ 1 * maintenance_scale ]
		mult = value:bugged_stock_exchange_tv
	}
	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}
	inline_script = "jobs/automodding_priority_research"
}

frame_maintenance_worker_unity = {
	condition_string = WORKER_JOB_TRIGGER
	icon = giga_birch_ktisma_worker
	category = worker
	possible_precalc = can_fill_worker_job
	inline_script = {
		script = jobs/frame_maintenance_jobs
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}
	resources = {
		category = planet_administrators
		produces = {
			unity = 2
		}
		upkeep = {
			consumer_goods = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			owner = {
				exists = owner
				is_spiritualist = yes
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_spiritualist = yes has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }

		}
		trade_value_add = @councilor_dimensional_worship_priest_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_dimensional_worship_corporate|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 0.5
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 0.5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 1
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.01
	}
	inline_script = "jobs/automodding_priority_unity"
}


frame_maintenance_drone_alloy = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	icon = maintenance_drone
	inline_script = {
		script = jobs/frame_maintenance_jobs
		STRATA = worker
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}
	possible_precalc = can_fill_drone_job
	resources = {
		category = planet_metallurgists
		inline_script = {
			script = jobs/frame_maintenance_jobs_base_bonuses_alloy
			SCALE = 0.5
		}
	}
	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}
	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_bugged_hive_crafters
			}
		}
		planet_amenities_add = @[ 1 * maintenance_scale ]
	}
}

frame_maintenance_drone_research = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	icon = maintenance_drone
	inline_script = {
		script = jobs/frame_maintenance_jobs
		STRATA = worker
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}
	possible_precalc = can_fill_drone_job
	resources = {
		category = planet_researchers
		produces = {
			physics_research = @[ 3 * maintenance_scale ]
			engineering_research = @[ 3 * maintenance_scale ]
			society_research = @[ 3 * maintenance_scale ]
		}
		upkeep = {
			minerals = @[ 6 * maintenance_scale ]
			trigger = {
				owner = {
					is_robot_empire = no
				}
			}
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
				owner = {
					is_robot_empire = no
				}
			}
			minerals = @[ 3 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				owner = {
					is_robot_empire = yes
				}
			}
			energy = @[ 4 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
				owner = {
					is_robot_empire = yes
				}
			}
			energy = @[ 2 * maintenance_scale ]
		}
		#half the effect of bonuses/reducitons
		produces = {
			physics_research = -0.5
			multiplier = modifier:planet_researchers_physics_research_produces_add
		}
		produces = {
			engineering_research = -0.5
			multiplier = modifier:planet_researchers_engineering_research_produces_add
		}
		produces = {
			society_research = -0.5
			multiplier = modifier:planet_researchers_society_research_produces_add
		}
		upkeep = {
			consumer_goods = -0.5
			multiplier = modifier:planet_researchers_consumer_goods_upkeep_add
		}
		upkeep = {
			trigger = {
				owner = {
					is_robot_empire = no
				}
			}
			minerals = -0.5
			multiplier = modifier:planet_researchers_consumer_goods_upkeep_add
		}
	}
	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}
	#Bug Branch
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_bugged_hive_researcher }
		}
		modifier = {
			planet_researchers_produces_mult = @[ 0.01 * maintenance_scale ]
		}
	}
	#Bug Branch

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = @[ 0.5 * maintenance_scale ]
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	inline_script = {
		script = jobs/frame_maintenance_jobs_base_bonuses
		JOB_TYPE = $JOB_TYPE$
	}
	inline_script = "jobs/automodding_priority_research"
}

frame_maintenance_drone_unity = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	icon = maintenance_drone
	inline_script = {
		script = jobs/frame_maintenance_jobs
		STRATA = worker
		PRE_TRIGGER = "possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}"
	}
	possible_precalc = can_fill_drone_job
	resources = {
		category = planet_administrators
		produces = {
			unity = @[ 4 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				owner = {
					is_robot_empire = yes
				}
			}
			energy = @[ 4 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				owner = {
					is_robot_empire = yes
				}
				is_lithoid = no
			}
			food = @[ 2 * maintenance_scale ]
			energy = @[ 2 * maintenance_scale ]
		}
		upkeep = {
			trigger = {
				owner = {
					is_robot_empire = yes
				}
				is_lithoid = yes
			}
			minerals = @[ 2 * maintenance_scale ]
			energy = @[ 2 * maintenance_scale ]
		}
		produces = {
			trigger = {
				owner = {
					has_valid_civic = civic_bugged_hive_cognitive_focus
				}
			}
			unity = @[ 1 * maintenance_scale ]
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_hivemind }
		}
		modifier = {
			planet_stability_add = @[ 2 * maintenance_scale ]
			planet_jobs_simple_drone_produces_mult = @[ 0.01 * maintenance_scale ]
		}
	}

	#Bug Branch
		triggered_country_modifier = {
			potential = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_hive_cognitive_focus
				}
			}
			country_edict_fund_add = @[ 2 * maintenance_scale ]
			mult = value:job_total_output_modifier|JOB|synapse_drone|RESOURCE|unity|
		}
	#Bug Branch

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_no_happiness_add = @[ 1 * maintenance_scale ]
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
		}
		planet_amenities_no_happiness_add = @[ 2 * maintenance_scale ]
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = {
		script = jobs/frame_maintenance_jobs_base_bonuses
		JOB_TYPE = $JOB_TYPE$
	}

	inline_script = "jobs/automodding_priority_unity"
}

