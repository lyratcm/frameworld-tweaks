#ow for bb as it increase the job weights based on trade bonuses which causes issues

#Merchant
merchant = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_galactic_stock_exchange
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_merchants
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_augmentation_bazaars
			}
		}
		trade_value_mult = 0.01
		pop_growth_speed = 0.005
		mult = value:num_cyborg_traits_species
	}

	#Bug Branch
	inline_script = {
		script = "jobs/bugged_trade_job_effects"
		REQ = "
			exists = owner
		"
	}
	# Bug Branch

	weight = {
		weight = @ruler_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		# #exclude my extra output bonuses
		# mult = value:bb_scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = merchant
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

trader = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_commercial_megaplex
	clothes_texture_index = 3
	icon = bugged_trader

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job_trigger

	resources = {
		category = planet_traders
		upkeep = {
			consumer_goods = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 8
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_commercial_enterprise }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_merchant_guilds" }
		}

		trade_value_add = 0.4
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_merchant_guilds|
	}

	inline_script = {
		script = "jobs/bugged_trade_job_effects"
		REQ = "
			exists = owner
		"
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		# mult = value:bb_scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = trader
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

manager = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	resources = {
		category = planet_managers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|manager|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	#Bug Branch
	inline_script = {
		script = "jobs/bugged_trade_job_effects"
		REQ = "
			exists = owner
		"
	}
	#Bug Branch

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|manager|RESOURCE|unity|
		# mult = value:bb_scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = manager
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

clerk = {
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_residence
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_clerks
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_synth_corporate = no
			}
		}
		trade_value_mult = 0.01
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_policy_flag = computation_core_production
			}
		}
		planet_jobs_alloys_produces_mult = 0.005
		planet_jobs_consumer_goods_produces_mult = 0.005
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_policy_flag = computation_core_stability
			}
		}
		planet_jobs_unity_produces_mult = 0.005
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_policy_flag = computation_core_research
			}
		}
		planet_jobs_physics_research_produces_mult = 0.005
		planet_jobs_society_research_produces_mult = 0.005
		planet_jobs_engineering_research_produces_mult = 0.005
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				NOT = { has_planet_flag = has_franchise_headquarters }
			}
		}
		trade_value_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_planet_flag = has_franchise_headquarters
			}
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	overlord_resources = {
		category = planet_corporate_franchising_meddling
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_franchise_headquarters
				}
			}
			unity = 0.25
		}
	}

	triggered_pop_modifier = {
		potential = {
			exists = owner
			owner = { has_modifier = paragon_origin_strengthened_government_ii }
		}
		pop_political_power = 0.25
	}

	triggered_pop_modifier = {
		potential = {
			exists = owner
			owner = { has_modifier = paragon_origin_strengthened_government_iii }
		}
		pop_political_power = 0.50
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = orbital_defence
				orbital_defence = {
					exists = starbase
					starbase = {
						has_starbase_building = ring_trade_hub
					}
				}
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_trickle_up_economics }
		}
		trade_value_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_trickle_up_economics }
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# Bug Branch
	inline_script = {
		script = "jobs/bugged_trade_job_effects"
		REQ = "
			exists = owner
		"
	}
	#Bug Branch

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_modifier = paragon_origin_strengthened_government_iii }
		}
		country_edict_fund_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_virtuality_5 }
		}

		modifier = {
			planet_virtual_jobs_produces_mult = 0.01
		}
	}

	weight = {
		weight = @clerk_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		# mult = value:bb_scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.25
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 2
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
		}
		modifier = {
			factor = 10
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			can_fill_specialist_job_trigger = no
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			exists = owner
			owner = { is_megacorp = yes }
		}
		modifier = {
			factor = 0.5
			exists = owner
			owner = { is_fallen_empire = yes }
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}