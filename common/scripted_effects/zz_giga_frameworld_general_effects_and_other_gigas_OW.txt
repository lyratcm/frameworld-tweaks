# planet scope
giga_frameworld_recalculate_exponent = {
	# set to the base level
	set_variable = {
		which = giga_frameworld_expansion_cost_exponent
		value = @giga_frameworld_expansion_cost_exponent
	}

	if = {
		limit = {
			exists = owner
		}

		owner = {
			if = {
				limit = {
					event_target:frame_expand@owner = {
						has_planet_flag = frameworld_habitat_completed
					}
				}
				prev = {
					change_variable = {
						which = giga_frameworld_expansion_cost_exponent
						value = @fwt_frameworld_expansion_cost_habitat_upgrade
					}
				}
			}

			if = {
				limit = {
					has_ascension_perk = ap_voidborn
				}
				prev = {
					change_variable = {
						which = giga_frameworld_expansion_cost_exponent
						value = @giga_frameworld_expansion_exponent_voidborne
					}
				}
			}

			if = {
				limit = {
					has_technology = tech_ring_world
				}
				prev = {
					change_variable = {
						which = giga_frameworld_expansion_cost_exponent
						value = @giga_frameworld_expansion_exponent_ringworld
					}
				}
			}

			if = {
				limit = {
					has_technology = tech_mega_engineering
				}
				prev = {
					change_variable = {
						which = giga_frameworld_expansion_cost_exponent
						value = @fwt_frameworld_expansion_exponent_mega_engineering
					}
				}
			}

			if = {
				limit = {
					event_target:frame_expand@owner = {
						has_planet_flag = frameworld_expand_infrastructure_completed
					}
				}
				prev = {
					change_variable = {
						which = giga_frameworld_expansion_cost_exponent
						value = @fwt_frameworld_expansion_cost_city_upgrade
					}
				}
			}

			# if = {
			# 	limit = {
			# 		event_target:frameworld = {
			# 			has_planet_flag = frameworld_interstellar_assembly_completed
			# 			has_planet_flag = frameworld_yggdrasil_orchid_completed
			# 			has_planet_flag = frameworld_computing_complex_completed
			# 			has_planet_flag = frameworld_interstellar_assembly_completed
			# 			has_planet_flag = frameworld_advanced_industrial_completed
			# 			has_planet_flag = frameworld_decompressor_completed
			# 			has_planet_flag = frameworld_penrose_completed
			# 		}
			# 	}
			# 	prev = {
			# 		change_variable = {
			# 			which = giga_frameworld_expansion_cost_exponent
			# 			value = @fwt_frameworld_expansion_cost_mega_engi_upgrade
			# 		}
			# 	}
			# }
		}
	}
}

# planet scope
giga_frameworld_recalculate_variables = {
	# cost mult to 1
	giga_frameworld_reset_variables = yes

	# recalculate the exponent
	giga_frameworld_recalculate_exponent = yes

	# deal with calculating base cost
	set_variable = {
		which = giga_frameworld_expansion_cost_base
		value = @giga_frameworld_expansion_cost_base
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_habitat_2
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @giga_frameworld_expansion_cost_habitat_2
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_habitat_3
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @giga_frameworld_expansion_cost_habitat_3
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_starbase_2
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @fwt_frameworld_expansion_cost_starbase_2
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_starbase_3
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @fwt_frameworld_expansion_cost_starbase_3
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_starbase_4
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @fwt_frameworld_expansion_cost_starbase_4
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_starbase_5
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @fwt_frameworld_expansion_cost_starbase_5
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_technology = tech_mega_shipyard
			}
		}
		change_variable = {
			which = giga_frameworld_expansion_cost_base
			value = @fwt_frameworld_expansion_cost_megashipyard
		}
	}

	# recalculate multiplier from expansion count
	if = {
		limit = {
			is_variable_set = giga_frameworld_structure_expansions
		}
		while = {
			count = giga_frameworld_structure_expansions

			multiply_variable = {
				which = giga_frameworld_expansion_cost_multiplier
				value = giga_frameworld_expansion_cost_exponent
			}
		}
	}

	set_variable = { which = giga_frameworld_expansion_cost_multiplier_dec value = giga_frameworld_expansion_cost_multiplier }
	# recalculate multiplier from expansion count
	while = {
		count = fwt_in_queue_expand

		multiply_variable = {
			which = giga_frameworld_expansion_cost_multiplier_dec
			value = giga_frameworld_expansion_cost_exponent
		}
	}
	multiply_variable = { which = giga_frameworld_expansion_cost_multiplier_dec value = giga_frameworld_expansion_cost_base }
	# set up the bulk buy options
	set_variable = {
		# temp value for our mult
		which = giga_frameworld_expansion_multiplier_bulk
		value = giga_frameworld_expansion_cost_multiplier
	}
	set_variable = {
		# +5 starts with the +1 cost
		which = giga_frameworld_expansion_bulk_5_cost_multiplier
		value = giga_frameworld_expansion_cost_multiplier
	}

	while = {
		count = 4 # the current mult is for +1 so for +5 we need 4 more
		multiply_variable = {
			# increase our temp multiplier
			which = giga_frameworld_expansion_multiplier_bulk
			value = giga_frameworld_expansion_cost_exponent
		}
		change_variable = {
			# add the cost to our bulk cost
			which = giga_frameworld_expansion_bulk_5_cost_multiplier
			value = giga_frameworld_expansion_multiplier_bulk
		}
	}

	set_variable = {
		# +10 starts with the +5 cost
		which = giga_frameworld_expansion_bulk_10_cost_multiplier
		value = giga_frameworld_expansion_bulk_5_cost_multiplier
	}

	while = {
		count = 5 # increment 5 more times to get to +10
		multiply_variable = {
			# increase temp multiplier
			which = giga_frameworld_expansion_multiplier_bulk
			value = giga_frameworld_expansion_cost_exponent
		}
		change_variable = {
			# add to bulk cost
			which = giga_frameworld_expansion_bulk_10_cost_multiplier
			value = giga_frameworld_expansion_multiplier_bulk
		}
	}

	# tooltip variables
	set_variable = {
		which = giga_frameworld_expansion_cost_multiplier_tooltip
		value = giga_frameworld_expansion_cost_multiplier
	}
	round_variable_to_closest = {
		which = giga_frameworld_expansion_cost_multiplier_tooltip
		value = 0.01
	}

	set_variable = {
		which = giga_frameworld_expansion_bulk_5_cost_multiplier_tooltip
		value = giga_frameworld_expansion_bulk_5_cost_multiplier
	}
	round_variable_to_closest = {
		which = giga_frameworld_expansion_bulk_5_cost_multiplier_tooltip
		value = 0.01
	}

	set_variable = {
		which = giga_frameworld_expansion_bulk_10_cost_multiplier_tooltip
		value = giga_frameworld_expansion_bulk_10_cost_multiplier
	}
	round_variable_to_closest = {
		which = giga_frameworld_expansion_bulk_10_cost_multiplier_tooltip
		value = 0.01
	}

	# recalculate "we have lots of alloys AI buffer"
	giga_frameworld_recalculate_buffer = yes

	# recalculate maginot district cap
	giga_frameworld_update_maginot_deposits = yes
}

#
# # disabled as those job aren't wanted
# giga_frameworld_apply_expanded_maintenance_modifier = {
# 	# if = {
# 	# 	limit = {
# 	# 		giga_frameworld_has_expanded_maintenance_modifier = no
# 	# 	}
# 	# 	if = {
# 	# 		limit = {
# 	# 			exists = owner
# 	# 			owner = { is_gestalt = yes }
# 	# 		}
# 	# 		add_modifier = {
# 	# 			modifier = frameworld_expanded_maintenance_protocol_gestalt
# 	# 			clear_on_owner_change = yes
# 	# 		}
# 	# 	}
# 	# 	else = {
# 	# 		add_modifier = {
# 	# 			modifier = frameworld_expanded_maintenance_protocol
# 	# 			clear_on_owner_change = yes
# 	# 		}
# 	# 	}
# 	# }
# 	# hidden_effect = {
# 	# 	if = {
# 	# 		limit = {
# 	# 			not = {
# 	# 				has_deposit = d_frameworld_expanded_maintenance_protocol
# 	# 			}
# 	# 		}
# 	# 		add_deposit = d_frameworld_expanded_maintenance_protocol
# 	# 	}
# 	# 	check_planet_employment = yes
# 	# }
# }

#temp overwrite till ai check is fixed
frameworld_conduct_audit_check_ai = {
    # if = {
    #     limit = {
    #         exists = owner
    #         owner = {
    #             is_ai = yes
    #         }
    #     }
    #     frameworld_conduct_audit = yes
    # }
}