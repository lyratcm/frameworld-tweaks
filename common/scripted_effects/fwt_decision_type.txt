
add_decision_time = {
	[[NAME1] frame_add_mult_tooltip = { NAME1 = $NAME1$ } ]
	[[NAME2] frame_add_mult_tooltip = { NAME2 = $NAME2$ } ]
	[[NAME_SIZE1] frame_add_mult_tooltip = { NAME_SIZE1 = $NAME_SIZE1$ } ]
	[[NAME_DEPOSIT] frame_add_mult_tooltip = { NAME_DEPOSIT = $NAME_DEPOSIT$ } ]

	hidden_effect = {
		#[[]] means that there doesn't have to be all the parameters but the script still works without errors
		[[TIME]
			owner = {
				set_variable = {
					which = fwt_decision_time
					value = $TIME$
				}
			}
		]
		set_planet_flag = frameworld_upgrade
		save_global_event_target_as = frame_expand@owner
		[[NAME]
			set_planet_flag = $NAME$_queued
			set_planet_flag = $NAME$_dec
			set_planet_flag = $NAME$
		]
	}
	#lazyness so i don't need to update old situation to account for this
	[[!SITUATION_TYPE]
		owner = {
			start_situation = {
				type = giga_situation_frameworld_decisions
			}
			every_situation = {
				limit = {
					is_situation_type = giga_situation_frameworld_decisions
					not = {
						has_situation_flag = situation_set
					}
				}
				set_situation_flag = $NAME$_dec
				set_situation_flag = situation_set
			}
		}
	]
	[[SITUATION_TYPE]
		owner = {
			start_situation = {
				type = $SITUATION_TYPE$
			}
		}
	]
}

add_completion_flag = {
	set_planet_flag = frameworld_$NAME$_completed

}

frame_add_mult_tooltip = {
	[[NAME1]
		tooltip = {
			add_deposit = $NAME1$_tooltip
		}
	]
	[[NAME2]
		custom_tooltip = frameworld_line
		tooltip = {
			add_deposit = $NAME2$_tooltip
		}
	]
	[[NAME_SIZE1]
		custom_tooltip = frameworld_line
		tooltip = {
			change_planet_size = $NAME_SIZE1$
		}
	]
	[[NAME_DEPOSIT]
		custom_tooltip = frameworld_line
		tooltip = {
			add_deposit = $NAME_DEPOSIT$
		}
	]
}

remove_flags = {
	#remove any planet flags associated with that decision
	if = {
		limit = { has_planet_flag = frameworld_upgrade }
		remove_planet_flag = frameworld_upgrade
	}
	if = {
		limit = { has_planet_flag = $NAME$_started }
		remove_planet_flag = $NAME$_started
	}
	if = {
		limit = { has_planet_flag = $NAME$ }
		remove_planet_flag = $NAME$
	}
	if = {
		limit = { has_planet_flag = $NAME$_dec }
		remove_planet_flag = $NAME$_dec
	}
	if = {
		limit = { has_planet_flag = $NAME$_queued }
		remove_planet_flag = $NAME$_queued
	}
}

frame_size_gal_wonders = {
	if = {
		limit = {
			check_variable = { which = frame_expansion_upgrade value >= 3 }
			has_galactic_wonders = yes
		}
		set_variable = { which = frame_expansion_scale value = 4 }
	}
	else = {
		change_variable = { which = frame_expansion_upgrade value = 1 }
	}
}

fwt_trigger_effects_situation = {
	switch = {
		trigger = has_situation_flag
		#move these here bc of issues with recursion depth
		giga_frameworld_expand_dec = {
			custom_tooltip = frameworld_line
			event_target:frame_expand@owner = {
				remove_planet_flag = giga_frameworld_expand_queued
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_structure_expansion
					VAR = giga_frameworld_structure_expansions
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				# update entity and do all the math
				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					giga_frameworld_recalculate_variables = yes
					frameworld_conduct_audit_check_ai = yes
				}
				remove_flags = { NAME = giga_frameworld_expand }
			}
		}
		giga_frameworld_expand_mass_dec = {
			custom_tooltip = frameworld_line
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_planet
					VAR = giga_frameworld_planets
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					giga_frameworld_recalculate_variables = yes
					frameworld_conduct_audit_check_ai = yes
				}
				remove_flags = { NAME = giga_frameworld_expand_mass }
			}
		}
		giga_frameworld_expand_mass_bulk_5_dec = {
			custom_tooltip = frameworld_line
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
					COUNT = 5
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_planet
					VAR = giga_frameworld_planets
					COUNT = 5
				}
				custom_tooltip = frameworld_line
				change_planet_size = 5

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					giga_frameworld_recalculate_variables = yes
					frameworld_conduct_audit_check_ai = yes
				}
				remove_flags = { NAME = giga_frameworld_expand_mass }
				remove_flags = { NAME = giga_frameworld_expand_mass_bulk_5 }
			}
		}
		giga_frameworld_expand_mass_bulk_10_dec = {
			custom_tooltip = frameworld_line
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
					COUNT = 10
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_planet
					VAR = giga_frameworld_planets
					COUNT = 10
				}
				custom_tooltip = frameworld_line
				change_planet_size = 10

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					giga_frameworld_recalculate_variables = yes
					frameworld_conduct_audit_check_ai = yes
				}
				remove_flags = { NAME = giga_frameworld_expand_mass }
				remove_flags = { NAME = giga_frameworld_expand_mass_bulk_10 }
			}
		}
		giga_frameworld_reorganise_dec = {
			custom_tooltip = frameworld_line
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_reorganise_expansion
					VAR = giga_frameworld_reorganise_expansions
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					frameworld_conduct_audit_check_ai = yes
				}
				remove_flags = { NAME = giga_frameworld_reorganise }
			}
		}
		giga_frameworld_consume_world_dec = {
			event_target:frame_expand@owner = {
				remove_flags = { NAME = giga_frameworld_consume_world }
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_devour_expansion
					VAR = giga_frameworld_devour_expansions
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				custom_tooltip = frameworld_line

				hidden_effect = {
					from = {
						random_owned_fleet = {
							limit = {
								is_consumable_frameworld_outpost = yes
							}
							orbit = {
								save_event_target_as = consumed_world
								add_deposit = d_frameworld_terravore_damage
							}
						}
					}
				}

				if = {
					limit = {
						has_bug_branch = yes
						from = {
							is_machine_empire = yes
						}
					}
					random_list = {
						10 = {
							create_pop = {
								species = owner_main_species
							}
							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_POP_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
						10 = {
							owner = {
								add_monthly_resource_mult = {
									resource = minerals
									value = 3
									min = @tier1materialmin
									max = @tier1materialmax
								}
							}

							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_MINERALS_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
						10 = {
							owner = {
								add_monthly_resource_mult = {
									resource = alloys
									value = 2
									min = @tier1materialmin
									max = @tier1materialmax
								}
							}

							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_ALLOYS_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
					}
				}
				else = {
					random_list = {
						10 = {
							create_pop = {
								species = owner_main_species
							}

							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_TERRAVORE_CONSUME_WORLD_POP_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
						10 = {
							owner = {
								add_monthly_resource_mult = {
									resource = minerals
									value = 3
									min = @tier1materialmin
									max = @tier1materialmax
								}
							}

							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_TERRAVORE_CONSUME_WORLD_MINERALS_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
						10 = {
							owner = {
								add_monthly_resource_mult = {
									resource = alloys
									value = 2
									min = @tier1materialmin
									max = @tier1materialmax
								}
							}

							create_message = {
								type = MESSAGE_TERRAVORE_CONSUME_WORLD
								localization = MESSAGE_TERRAVORE_CONSUME_WORLD_ALLOYS_TEXT
								days = 30
								target = event_target:consumed_world

								variable = {
									type = name
									localization = PLANET
									scope = event_target:consumed_world
								}
							}
						}
					}
				}
				reroll_random = yes

				custom_tooltip = giga_frameworld_consume_world_effect

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					frameworld_conduct_audit_check_ai = yes
				}
			}
		}
		# frameworld_maginot_dec = {
		# 	event_target:frame_expand@owner = {
		# 		custom_tooltip = giga_frameworld_upgrade_desc
		# 		custom_tooltip = giga_frameworld_maginot_effect
		# 		remove_flags = { NAME = frameworld_maginot }
		# 		add_deposit = d_frameworld_maginot
		# 		hidden_effect = {
		# 			set_planet_flag = frameworld_maginot
		# 		}
		#
		# 		custom_tooltip = frameworld_line
		# 		custom_tooltip = giga_frameworld_upgrade_upkeep
		#
		# 		hidden_effect = {
		# 			giga_frameworld_spawn_maginot_defensive_stations = {
		# 				WHO = owner
		# 			}
		# 			init_giga_maginot = yes
		# 			giga_frameworld_update_maginot_deposits = yes
		# 		}
		#
		# 		save_event_target_as = giga_planet
		# 		hidden_effect = { owner = { country_event = { id = giga_frameworld_origin.013 } } }
		# 		add_completion_flag = { NAME = maginot }
		# 	}
		# }
		giga_frameworld_expand_nanites = {
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_nanite_expansion
					VAR = giga_frameworld_nanite_expansions
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					giga_frameworld_recalculate_variables = yes
					frameworld_conduct_audit_check_ai = yes
				}
			}
		}
		giga_frameworld_nanite_consume_world = {
			event_target:frame_expand@owner = {
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_expansion
					VAR = giga_frameworld_expansions
				}
				custom_tooltip = frameworld_line
				giga_frameworld_expand_deposit = {
					DEPOSIT = d_frameworld_nanite_expansion
					VAR = giga_frameworld_nanite_expansions
				}
				custom_tooltip = frameworld_line
				change_planet_size = 1

				custom_tooltip = frameworld_line

				hidden_effect = {
					from = {
						random_owned_fleet = {
							limit = {
								is_nanite_consumable_frameworld_outpost = yes
							}
							orbit = {
								save_event_target_as = consumed_world
								add_deposit = d_frameworld_nanite_damage
							}
						}
					}
				}

				owner = {
					add_monthly_resource_mult = {
						resource = nanites
						value = 1
						min = @tier1materialmin
						max = @tier1materialmax
					}
				}

				create_message = {
					type = MESSAGE_TERRAVORE_CONSUME_WORLD
					localization = MESSAGE_NANOTECH_CONSUME_WORLD_1_TEXT
					days = 30
					target = event_target:consumed_world

					variable = {
						type = name
						localization = PLANET
						scope = event_target:consumed_world
					}
				}

				custom_tooltip = giga_frameworld_nanite_consume_world_effect

				hidden_effect = {
					giga_frameworld_update_entity_with_fallback = yes
					frameworld_conduct_audit_check_ai = yes
				}
			}
		}
	}
	destroy_situation = this
}
