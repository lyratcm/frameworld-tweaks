# triggers for whether a planet is considered to have assembly buildings of various types
# used non-exclusively by the frameworld to decide what kinds of assembly jobs it should give

# robot assembly
# not necessarily just normal empires, looking at you stellaris evolved
# if your going to throw shade at evolved at least add support for it - lyra
# add support for evolved - lyra
giga_planet_has_robot_assembly_facilities = {
    or = {
        has_building = building_robot_assembly_plant
        has_building = building_robot_assembly_complex
        tec_has_robotic_assembly_buildings = yes
    }
}

# cloning vats
# normal and hive, all the same
giga_planet_has_cloning_assembly_facilities = {
    or = {
        tec_has_cloning_assembly_buildings = yes
        has_building = building_clone_vats
        tec_has_bioservant_assembly_buildings = yes
    }
}

# reassigners
giga_planet_has_zombie_assembly_facilities = {
    has_building = building_posthumous_employment_center
}

# machine assembly
giga_planet_has_machine_assembly_facilities = {
    or = {
        has_building = building_machine_assembly_plant
        has_building = building_machine_assembly_complex
        tec_has_machine_assembly_buildings = yes
    }
}

# spawning pools
giga_planet_has_spawning_assembly_facilities = {
    or = {
        tec_has_spawning_assembly_buildings = yes
        has_building = building_spawning_pool
    }

}

#temp ow
frameworld_has_active_nanite_upgrade = {
    has_planet_flag = frameworld_nanites
    owner = {
        has_tradition = tr_nanotech_adopt
    }
}

can_have_frameworld_outpost = {
	custom_tooltip = { fail_text = "requires_surveyed_planet"				is_surveyed = { who = prev.from status = yes } }
	custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
	custom_tooltip = { fail_text = "requires_not_asteroid"					is_asteroid = no }
	#custom_tooltip = { fail_text = "must_build_around_habitable_planet"		is_colonizable = yes is_artificial = no }

	custom_tooltip = { fail_text = "requires_not_terraforming"				is_terraforming = no }

	custom_tooltip = { fail_text = "must_build_around_habitable_planet"
		or = {
			and = { is_colonizable = yes is_artificial = no }

			is_planet_class = pc_giga_planetary_computer
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_shattered_ring_habitable
			#is_planet_class = pc_habitat
			#is_planet_class = pc_gigaorbital_ring
			is_planet_class = pc_habitable_gas_giant
			#is_planet_class = pc_interstellar_habitat
			is_planet_class = pc_interstellar_ringworld_habitable
			is_planet_class = pc_giga_penrose_habitable
			is_planet_class = pc_ringworld_city
			is_planet_class = pc_ringworld_machine
			is_planet_class = pc_ringworld_hive
			#is_planet_class = pc_equatorial_shipyard
			is_planet_class = pc_birch
			is_planet_class = pc_squareworld_habitable
			#is_planet_class = pc_virtual_reality
			#is_planet_class = pc_virtual_industry
			#is_planet_class = pc_virtual_stellar_industry
			is_planet_class = pc_alderson_slice_gaia
			is_planet_class = pc_alderson_slice_pc
			is_planet_class = pc_alderson_slice_ecu
			is_planet_class = pc_alderson_slice_hive
			is_planet_class = pc_alderson_slice_machine
			is_planet_class = pc_alderson_slice_gaia_shattered
			#is_planet_class = pc_pouchkinn_black_hole
			is_planet_class = pc_flat_world
			is_planet_class = pc_apsr_ancient
			is_planet_class = pc_apsr_unique
		}
	}
	custom_tooltip = {
		fail_text = "requires_not_astral_scar"
		is_astral_scar = no
	}
	custom_tooltip = { fail_text = "requires_not_star"						is_star = no }
	#custom_tooltip = { fail_text = "requires_non_giga_habitable_structure"	giga_habitable_structure = no }
	custom_tooltip = { fail_text = "requires_no_frameworld_outpost" 		has_frameworld_outpost = no }
	custom_tooltip = { fail_text = "requires_no_colony"						is_colony = no }
}
